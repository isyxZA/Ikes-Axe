<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>incr = -10;

//SPARKS Particle system
boost_sparks = part_system_create();
// Create particle type
star = part_type_create();
//part_type_shape(star,pt_shape_spark)
part_type_sprite(star, spr_Flare_01, 0, 0, 0);
part_type_size(star, 0.1, 0.2, 0.0001, 0)
part_type_scale(star,0.2, 0.2)
part_type_colour1(star, c_silver);
part_type_speed(star,0,0.1,0,0)//max was 3, incr was 0.1
part_type_direction(star,0, 360,1,0.25)
part_type_gravity(star, 0.03, 90)
part_type_life(star, 12,16)
part_type_blend(star, 1)
// Create particle type
sparks = part_type_create();
part_type_sprite(sparks, spr_Flare_03, 0,0,0);
part_type_scale(sparks, 1, 1);
part_type_colour3(sparks, c_silver, c_orange, c_yellow);
part_type_alpha2(sparks, 0.75, 0);
part_type_size(sparks, 0.005, 0.25, 0.055, 0);
part_type_speed(sparks, 0.005, 0.025, 0.00001, 0.001);
part_type_direction(sparks, 180, 80, 0, 0);
part_type_gravity(sparks, 0.03, 90);
part_type_life(sparks, 12, 16);
part_type_blend(sparks, 1);
part_type_step(sparks, -100, star);
// Make it happen
boost_sparks_emitter = part_emitter_create(boost_sparks);
part_system_depth(boost_sparks, 10);


//GHOST Particle system
boost_ghost_r = part_system_create();
// Create particle type
ghost_r = part_type_create();
part_type_sprite(ghost_r, spr_IDLE_0, 0, 0, 0);
part_type_size(ghost_r, 1, 1, -0.1, 0);
part_type_scale(ghost_r, 1, 1);
part_type_colour2(ghost_r, c_white, c_silver);
part_type_alpha2(ghost_r, 0.1, 0);
part_type_gravity(ghost_r, 2, 225);
part_type_life(ghost_r, 3, 3);
part_type_blend(ghost_r, 0);
// Make it happen
boost_ghostR_emitter = part_emitter_create(boost_ghost_r);
part_system_depth(boost_ghost_r, 11);

boost_ghost_l = part_system_create();
// Create particle type
ghost_l = part_type_create();
part_type_sprite(ghost_l, spr_IDLE_1, 0, 0, 0);
part_type_size(ghost_l, 1, 1, -0.1, 0);
part_type_scale(ghost_l, 1, 1);
part_type_colour2(ghost_l, c_white, c_silver);
part_type_alpha2(ghost_l, 0.1, 0);
part_type_gravity(ghost_l, 2, 315);
part_type_life(ghost_l, 3, 3);
part_type_blend(ghost_l, 0);
// Make it happen
boost_ghostL_emitter = part_emitter_create(boost_ghost_l);
part_system_depth(boost_ghost_l, 11);






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Boosting effect
if (global.biplane_joined == false) &amp;&amp; (global.rocket_joined == false) { 
    if (obj_Main_Char.boost == true){
        if (global.incr == 1){
            if incr &lt; -1 incr += 0.1 else incr = -1;
        }
        if global.dir == 1 {
            part_emitter_region(boost_ghost_l, boost_ghostL_emitter, global.x, global.x, global.y, global.y, ps_shape_line, ps_distr_linear);
            part_emitter_burst(boost_ghost_l, boost_ghostL_emitter, ghost_l, 2); 
        }
            else if global.dir == 0 {
                part_emitter_region(boost_ghost_r, boost_ghostR_emitter, global.x, global.x, global.y, global.y, ps_shape_line, ps_distr_linear);
                part_emitter_burst(boost_ghost_r, boost_ghostR_emitter, ghost_r, 2);
            }
        part_emitter_region(boost_sparks, boost_sparks_emitter, global.x-2, global.x-1, global.y+22, global.y+24, ps_shape_ellipse, ps_distr_gaussian);
        part_emitter_burst(boost_sparks, boost_sparks_emitter, sparks, incr);//was 2
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
