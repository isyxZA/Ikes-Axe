<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Crate_01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Brick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>crate_hitpoints = 50;
can_be_hurt = true;
can_smash = false;
can_pulse = true;
choice = choose(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

switch (room){
    case rm_Tutorial:
        sprite_index = choose(spr_Crate_01, spr_Crate_02, spr_Crate_03);
        break;
    default:
        sprite_index = choose(spr_Crate_01, spr_Crate_02, spr_Crate_03);
        break;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_pulse = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_apply_impulse(x, y, choose(-10, 20, -20, 10, 15, -15), choose(-80, -60, -70));
alarm[3] = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_apply_impulse(x, y, choose(-10, 20, -20, 10, 15, -15), choose(-80, -60, -70));
alarm[2] = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_be_hurt = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phy_speed_y &gt; 9) {can_smash = true;}
    else {can_smash = false;}

if (choice == 1) &amp;&amp; (can_pulse == true){
    can_pulse = false;
    alarm[1] = 55;
    physics_apply_impulse(x, y, choose(-10, 20, -20, 10, 15, -15), choose(-80, -60, -70));
}
    else if (choice == 11) &amp;&amp; (can_pulse == true){
    can_pulse = false;
    alarm[1] = 55;
    physics_apply_impulse(x, y, choose(-10, 20, -20, 10, 15, -15), choose(-80, -60, -70));
    }
    
if (crate_hitpoints &lt;= 0){
    if (distance_to_point(global.x, global.y)) &lt; global.sound_distance { audio_play_sound(snd_Crate_Destroy, 1, false); }
    if os_type == os_android {
        instance_create(x-16, y-16, choose(obj_Board_Lg, obj_Board_Sml));
        instance_create(x+16, y+16, choose(obj_Board_Lg, obj_Board_Sml));
    }
        else {
            instance_create(x-16, y+16, choose(obj_Board_Lg, obj_Board_Sml));
            instance_create(x, y, choose(obj_Board_Lg, obj_Board_Sml));
            instance_create(x+16, y-16, choose(obj_Board_Lg, obj_Board_Sml));
        }
    switch (choice){
        case 1:
        case 11:
            instance_create(x + 8, y - 12, obj_Chomp_Sml);
            instance_create(x - 8, y, obj_Chomp_Sml);
            instance_create(x + 16, y - 8, obj_Chomp_Sml);
            instance_create(x - 16, y - 2, obj_Chomp_Sml);
            instance_create(x, y + 2, obj_Chomp_Sml);
            break;
        case 2:
        case 15:
        case 16:
            instance_create(x, y, obj_Coin_Phy);
            instance_create(x + 4, y - 2, obj_Coin_Phy);
            instance_create(x + 8, y -4, obj_Coin_Phy);
            instance_create(x - 4, y - 2, obj_Coin_Phy);
            instance_create(x - 8, y - 4, obj_Coin_Phy);
            break;
        case 3:
            instance_create(x, y, obj_Axe_PwrUp);
            break;
        case 4:
            instance_create(x, y, obj_Extra_Life);
            break;
        case 5:
        case 6:
            instance_create(x, y, obj_Coin_Phy);
            break;
        case 7:
            instance_create(x, y, obj_Axe_PwrUp);
            break;
        case 8:
            instance_create(x, y, obj_Coin_Phy);
            instance_create(x + 4, y - 2, obj_Coin_Phy);
            instance_create(x + 8, y -4, obj_Coin_Phy);
            instance_create(x - 4, y - 2, obj_Coin_Phy);
            instance_create(x - 8, y - 4, obj_Coin_Phy);
            break;
        case 9:
        case 13:
            instance_create(x, y, obj_Coin_Phy);
            break;
        case 10:
            instance_create(x, y, obj_Chomp_Sml);
            break;
        case 14:
            instance_create(x, y, obj_Enemy_PooP);
            break;
        case 12:
            instance_create(x, y, obj_Coin_Phy);
            instance_create(x + 4, y - 2, obj_Coin_Phy);
            instance_create(x + 8, y -4, obj_Coin_Phy);
            instance_create(x - 4, y - 2, obj_Coin_Phy);
            instance_create(x - 8, y - 4, obj_Coin_Phy);
            break;
        default:
            instance_create(x, y, obj_Coin_Phy);
            break;     
    }
    with instance_create(global.x, global.y, obj_Numbers) {
        num = "+ 50";
        c1 = c_yellow;
    }
    score += 50;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Axe_Gold">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_be_hurt == true){
    can_be_hurt = false;
    crate_hitpoints -= 50;
    with instance_create(x, y-16, obj_Numbers) {
        num = "- 50";
        c1 = c_red;
    }
    score += 50;
    alarm[0] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Axe_Reg">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_be_hurt == true){
    can_be_hurt = false;
    crate_hitpoints -= 25;
    with instance_create(x, y-16, obj_Numbers) {
        num = "- 25";
        c1 = c_red;
    }
    score += 25;
    alarm[0] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Brick">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_smash == true){
    can_smash = false;
    if os_type == os_android {
        instance_create(x-16, y-16, choose(obj_Board_Lg, obj_Board_Sml));
        instance_create(x+16, y+16, choose(obj_Board_Lg, obj_Board_Sml));
    }
        else {
            instance_create(x-16, y+16, choose(obj_Board_Lg, obj_Board_Sml));
            instance_create(x, y, choose(obj_Board_Lg, obj_Board_Sml));
            instance_create(x+16, y-16, choose(obj_Board_Lg, obj_Board_Sml));
        }
    switch (choice){
        case 1:
        case 11:
            instance_create(x + 8, y - 12, obj_Chomp_Sml);
            instance_create(x - 8, y, obj_Chomp_Sml);
            instance_create(x + 16, y - 8, obj_Chomp_Sml);
            instance_create(x - 16, y - 2, obj_Chomp_Sml);
            instance_create(x, y + 2, obj_Chomp_Sml);
            break;
        case 2:
        case 15:
        case 16:
            instance_create(x, y, obj_Coin_Phy);
            instance_create(x + 4, y - 2, obj_Coin_Phy);
            instance_create(x + 8, y -4, obj_Coin_Phy);
            instance_create(x - 4, y - 2, obj_Coin_Phy);
            instance_create(x - 8, y - 4, obj_Coin_Phy);
            break;
        case 3:
            instance_create(x, y, obj_Axe_PwrUp);
            break;
        case 4:
            instance_create(x, y, obj_Extra_Life);
            break;
        case 5:
        case 6:
            instance_create(x, y, obj_Coin_Phy);
            break;
        case 7:
            instance_create(x, y, obj_Axe_PwrUp);
            break;
        case 8:
            instance_create(x, y, obj_Coin_Phy);
            instance_create(x + 4, y - 2, obj_Coin_Phy);
            instance_create(x + 8, y -4, obj_Coin_Phy);
            instance_create(x - 4, y - 2, obj_Coin_Phy);
            instance_create(x - 8, y - 4, obj_Coin_Phy);
            break;
        case 9:
        case 13:
            instance_create(x, y, obj_Coin_Phy);
            break;
        case 10:
            instance_create(x, y, obj_Chomp_Sml);
            break;
        case 14:
            instance_create(x, y, obj_Enemy_PooP);
            break;
        case 12:
            instance_create(x, y, obj_Coin_Phy);
            instance_create(x + 4, y - 2, obj_Coin_Phy);
            instance_create(x + 8, y -4, obj_Coin_Phy);
            instance_create(x - 4, y - 2, obj_Coin_Phy);
            instance_create(x - 8, y - 4, obj_Coin_Phy);
            break;
        default:
            instance_create(x, y, obj_Coin_Phy);
            break;     
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>2</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>72,0</point>
    <point>72,72</point>
    <point>0,72</point>
  </PhysicsShapePoints>
</object>
