<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Sun rotation counterclockwise
pos_rot = 1;
//Planet rotation clovckwise
neg_rot = 0;
my_alpha = 1;
cloud_alpha1 = 1;
cloud_alpha2 = 1;
//Cloud pan speed reference point
hor_speed = 0;
//Adjust pos_rot speed
slowdown = 1;
//Spawn effects
can_sparkle = true;
can_ufo = true;
can_bird = true;


//can_switch = 0;
//neb_sprite = bg_MainMenu_Nebula;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bird Spawn
can_bird = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UFO Spawn
can_ufo = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sparkle Spawn
can_sparkle = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Sun rotation limit
if (pos_rot &gt; 360) { pos_rot = 1; }

//Planet rotation 
neg_rot -= 3/room_speed; 
//Sun rotation
pos_rot += 6/room_speed * slowdown;
//Cloud panning
hor_speed -= 10/room_speed;

if my_alpha &gt; 1 { my_alpha = 1; }
if my_alpha &lt;= 0 { my_alpha = 0; }

if cloud_alpha1 &gt; 1  { cloud_alpha1 = 1; }
if cloud_alpha1 &lt;= 0 { cloud_alpha1 = 0; }

if cloud_alpha2 &gt; 1  { cloud_alpha2 = 1; }
if cloud_alpha2 &lt;= 0 { cloud_alpha2 = 0; }


if (pos_rot &gt;= 30 ) &amp;&amp; (pos_rot &lt; 180) &amp;&amp; (my_alpha &gt; 0){ 
    my_alpha -= 0.001; 
}
    else { if my_alpha &lt; 1 { my_alpha += 0.0006; } }

//Nighttime
if (pos_rot &gt;= 300 ) &amp;&amp; (pos_rot &lt; 360){
    slowdown = 0.5;
    if can_sparkle == true { 
        can_sparkle = false;
        instance_create(random(room_width), random(240), obj_Sparkles); 
        alarm[0] = random_range(60,200); 
    }
    if can_ufo == true { 
        can_ufo = false;
        instance_create(random(room_width), random_range(32,196), obj_UFO); 
        alarm[1] = random_range(100,400); 
    }
}
    else { slowdown = 1; }

//Daytime
if (pos_rot &gt; 60) &amp;&amp; (pos_rot &lt; 240) {
    if can_bird == true { 
        can_bird = false;
        alarm[2] = random_range(400, 600);
        instance_create(room_width/2 + random_range(-128, 128), room_height/4 + random(32), obj_Bird_01);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_index[0] = draw_background_ext(bg_MainMenu_Sky, 0, 0, 1, 1, 0, c_white, 1);
background_index[1] = draw_background_ext(bg_MainMenu_Nebula, 0, 0, 1, 1, 0, c_white, my_alpha);

background_index[2] = draw_background_tiled_ext(bg_MainMenu_Stars_02, -hor_speed*0.15, 0, 1, 1, c_white, my_alpha*0.75);
background_index[3] = draw_background_tiled_ext(bg_MainMenu_Stars, -hor_speed*0.25, 0, 1, 1, c_white, my_alpha);

background_index[4] = draw_background_tiled_ext(bg_MainMenu_Clouds_01, hor_speed, 0, 1, 1, c_white, 1-my_alpha);
background_index[5] = draw_background_tiled_ext(bg_MainMenu_Clouds_01, hor_speed, 0, 1, 1, c_black, my_alpha);

background_index[6] = draw_background_ext(bg_MainMenu_Sun, 480, 270, 1, 1, pos_rot, c_white, 1);

draw_sprite_ext(spr_MainMenu_Planet,0, 480, 600, 1, 1, neg_rot, c_white, 1);
draw_sprite_ext(spr_MainMenu_PlanetMask, 0, 480, 600, 1, 1, neg_rot, c_white, my_alpha);

background_index[7] = draw_background_tiled_ext(bg_MainMenu_Clouds_02, hor_speed*1.5, 0, 1, 1, c_white, 1-my_alpha);
background_index[8] = draw_background_tiled_ext(bg_MainMenu_Clouds_02, hor_speed*1.5, 0, 1, 1, c_black, my_alpha);

draw_set_alpha(1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign(fa_middle);
draw_set_font(fnt_90);
draw_set_colour(c_black);

draw_sprite_ext(spr_Axe_Logo, 0, 480, 80, 1, 1, 0, c_white, 1);
draw_set_halign(fa_left);
draw_text_outline(560, 80, "Axe", 2, make_colour_rgb(255,215,0), 16);
draw_set_blend_mode(bm_add);
draw_sprite_ext(spr_Cinema_Flare_998, 0, 480, 80, 1.25, 1.25, 0, c_white, 0.75);
draw_set_blend_mode(bm_normal);
draw_set_halign(fa_right);
draw_text_outline(460, 80, "Ike's", 2, make_colour_rgb(255,215,0), 16);

draw_set_halign(fa_left);
draw_set_font(fnt_12);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
